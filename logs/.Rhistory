return(substr(string, 1+edge_length, length(string)-(edge_length-1)))
}
remove_square_brackets("[3]")
?substr
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length-1)))
}
remove_square_brackets("[3]")
remove_square_brackets("[3]")
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
remove_square_brackets("[3]")
remove_square_brackets("['3']", 2)
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
logs$cpu <- vapply(logs$cpu, function(x) return(strtoi(remove_square_brackets(x))))
?vapply
logs$cpu <- lapply(logs$cpu, function(x) return(strtoi(remove_square_brackets(x))))
logs$cpu <- vapply(logs$cpu, function(x) return(strtoi(remove_square_brackets(x))), c(1))
logs$cpu <- vapply(logs$cpu, function(x) return(strtoi(remove_square_brackets(x))), c(1))
debugSource('~/Documents/AutomatedBayesCloudSelection/logs/log_analysis.R')
debugSource('~/Documents/AutomatedBayesCloudSelection/logs/log_analysis.R')
logs$cpu <- vapply(as.char(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
logs$cpu
install.packages("tidyverse")
library(ggplot2)
ggplot(logs, aes(x=cpu, y=score, fill=provider, color=type)) + geom_point()
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point()
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=5)
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
for (i in instance_types) {
print(i)
print(paste("Mean:", mean(logs[logs$instance==i,]$score)))
print(paste("SD:", sd(logs[logs$instance==i,]$score)))
hist(logs[logs$instance==i,]$score)
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
means = c()
sds = c()
for (i in instance_types) {
print(i)
print(paste("Mean:", mean(logs[logs$instance==i,]$score)))
means.append(mean(logs[logs$instance==i,]$score))
print(paste("SD:", sd(logs[logs$instance==i,]$score)))
sds.append(mean(logs[logs$instance==i,]$score))
hist(logs[logs$instance==i,]$score)
}
for (i in instance_types) {
print(i)
print(paste("Mean:", mean(logs[logs$instance==i,]$score)))
append(means, mean(logs[logs$instance==i,]$score))
print(paste("SD:", sd(logs[logs$instance==i,]$score)))
append(sds, sd(logs[logs$instance==i,]$score))
hist(logs[logs$instance==i,]$score)
}
means
test <- c(means, 2)
test
means = c()
sds = c()
for (i in instance_types) {
print(i)
print(paste("Mean:", mean(logs[logs$instance==i,]$score)))
means <- c(means, mean(logs[logs$instance==i,]$score))
print(paste("SD:", sd(logs[logs$instance==i,]$score)))
sds <- c(sds, sd(logs[logs$instance==i,]$score))
hist(logs[logs$instance==i,]$score)
}
means
hist(means)
hist(sds)
ggplot(logs, aes(x=score)) + geom_histogram(stat="identity") + panel_cols(~provider) + panel_rows(~type)
?geom_histogram
ggplot(logs, aes(score)) + geom_histogram(stat="identity") + panel_cols(~provider) + panel_rows(~type)
ggplot(logs, aes(score))#  + geom_histogram(stat="identity") + panel_cols(~provider) + panel_rows(~type)
ggplot(logs, aes(score))#  + geom_histogram(stat="identity") + panel_cols(~provider) + panel_rows(~type)
ggplot(logs, aes(score)) + geom_histogram()# + panel_cols(~provider) + panel_rows(~type)
ggplot(logs, aes(score)) + geom_histogram() + facet_grid(rows=provider, cols=type)
ggplot(logs, aes(score)) + geom_histogram() + facet_grid(rows=provider, cols=`type`)
ggplot(logs, aes(score)) + geom_histogram() + facet_grid(rows=provider, cols=logs$type)
ggplot(logs, aes(score)) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=cpu)) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) + geom_histogram(aes(fill=cpu))
ggplot(logs, aes(score, fill=cpu)) + geom_histogram(position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
head(logs)
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
head(logs)
ggplot(logs, aes(score, fill=cpu)) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=cpu)) + geom_histogram(position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
head(logs)
ggplot(logs, aes(score, fill=cpu)) + geom_histogram(aes(fill=cpu),position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score) + geom_histogram(aes(fill=cpu),position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
dasf
ggplot(logs, aes(score)) + geom_histogram(aes(fill=cpu),position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=cpu)) + geom_histogram()
ggplot(logs, aes(score, color=cpu)) + geom_histogram()
ggplot(logs, aes(score, color=cpu)) + geom_histogram(position='identity')
ggplot(logs, aes(score, color=as.factor(cpu))) + geom_histogram(position='identity')
ggplot(logs, aes(score, fill=as.factor(cpu))) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu), alpha=0.4)) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu), alpha=0.7)) + geom_histogram() + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu), alpha=0.7)) + geom_histogram(position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu), alpha=0.9)) + geom_histogram(position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu), alpha=1)) + geom_histogram(position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu))) + geom_histogram(position="identity") + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu))) + geom_histogram(position="identity", alpha=0.8) + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu))) + geom_histogram(position="identity", alpha=0.6) + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu))) + geom_histogram(position="identity", alpha=0.7) + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) + geom_histogram(position="identity", alpha=0.7) + facet_grid(rows=vars(provider), cols=vars(type))
?geom_histogram
ggplot(logs, aes(score, fill=as.factor(cpu))) + geom_freqpoly(position="identity", alpha=0.7) + facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) + geom_freqpoly(position="identity", alpha=0.7) + facet_grid(rows=vars(provider), cols=vars(type))
?geom_histogram
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes(y=..count../sum(..count..)), position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, )) +
geom_histogram(aes(y=..count../sum(..count..), fill=as.factor(cpu)), position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value)) +
geom_histogram(aes(y=..count../sum(..count..), fill=as.factor(cpu)), position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
fill=as.factor(cpu)
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes(y=..count../sum(..count..)), position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
aes(y=..count../sum(..count..)),
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes(y=..count../sum(..count..)), position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=bw*..density..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
bw <- 0.5
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=bw*..density..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=vars(bw)*..density..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=0.5*..density..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=0.5*..prop..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))+stat_count(aes(y=0.5*..prop..), position="identity", alpha=0.5, binwidth=bw) + facet_grid(rows=vars(provider), cols=vars(type))
)
ggplot(logs, aes(value, fill=as.factor(cpu))) +
stat_count(aes(y=0.5*..prop..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=0.5*..prop..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(aes=(y=0.5*..count..), position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_histogram(position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, fill=as.factor(cpu))) +
geom_density(position="identity",
alpha=0.5, binwidth=bw) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_histogram(position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, fill=as.factor(cpu))) +
geom_histogram(position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type, alpha=0.7)) + geom_point(size=3)
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(score, fill=as.factor(cpu))) +
geom_histogram(position='identity', alpha=0.7)
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(x=cpu, y=value, shape=provider, color=type)) + geom_point(size=3)
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
ggplot(logs, aes(x=cpu, y=value, shape=provider, color=type)) + geom_point(size=3)
cpu2 <- logs[logs$cpu==2,]
cpu4 <- logs[logs$cpu==4,]
cpu8 <- logs[logs$cpu==8,]
ggplot(logs, aes(score)) +
geom_histogram(data=cpu2, fill="red", alpha=0.7) +
geom_histogram(data=cpu4, fill="green", alpha=0.7) +
geom_histogram(data=cpu8, fill="blue", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_freqpoly(data=cpu2, fill="red", alpha=0.7) +
geom_histogram(data=cpu4, fill="green", alpha=0.7) +
geom_histogram(data=cpu8, fill="blue", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_freqpoly(data=cpu2, color="red", alpha=0.7) +
geom_freqpoly(data=cpu4, color="green", alpha=0.7) +
geom_freqpoly(data=cpu8, color="blue", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score/..count..)) +
geom_freqpoly(data=cpu2, color="red", alpha=0.7) +
geom_freqpoly(data=cpu4, color="green", alpha=0.7) +
geom_freqpoly(data=cpu8, color="blue", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes((score/..count..))) +
geom_freqpoly(data=cpu2, color="red", alpha=0.7) +
geom_freqpoly(data=cpu4, color="green", alpha=0.7) +
geom_freqpoly(data=cpu8, color="blue", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_bar(data=cpu2, aes(y=(..count..)/sum(..count..)), color="red", alpha=0.7) +
geom_freqpoly(data=cpu4, color="green", alpha=0.7) +
geom_freqpoly(data=cpu8, color="blue", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_bar(data=cpu2, aes(y=(..count..)/sum(..count..)), color="red", alpha=0.7) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="blue", alpha=0.7) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="green", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_bar(data=cpu2, aes(y=(..count..)/sum(..count..)), color="red", alpha=0.7) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="blue", alpha=0.5) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="green", alpha=0.5) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(as.factor(score))) +
geom_bar(data=cpu2, aes(y=(..count..)/sum(..count..)), color="red", alpha=0.7) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="blue", alpha=0.5) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="green", alpha=0.5) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_histogram(data=cpu2, aes(y=..density..), color="red", alpha=0.7) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="blue", alpha=0.5) +
geom_bar(data=cpu4, aes(y=(..count..)/sum(..count..)), color="green", alpha=0.) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_histogram(data=cpu2, aes(y=..density..), color="red", alpha=0.7) +
geom_bar(data=cpu4, aes(y=..density..), color="blue", alpha=0.5) +
geom_bar(data=cpu8, aes(y=..density..), color="green", alpha=0.) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_histogram(data=cpu2, aes(y=..density..), color="red", alpha=0.7) +
geom_bar(data=cpu4, aes(y=..density..), color="blue", alpha=0.5) +
geom_bar(data=cpu8, aes(y=..density..), color="green", alpha=0.) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_histogram(data=cpu2, aes(y=..density..), color="red", alpha=0.7) +
geom_histogram(data=cpu4, aes(y=..density..), color="blue", alpha=0.5) +
geom_histogram(data=cpu8, aes(y=..density..), color="green", alpha=0.) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_histogram(data=cpu2, aes(y=..density..), fill="red", alpha=0.7) +
geom_histogram(data=cpu4, aes(y=..density..), fill="blue", alpha=0.5) +
geom_histogram(data=cpu8, aes(y=..density..), fill="green", alpha=0.5) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_freqpoly(data=cpu2, aes(y=..density..), fill="red", alpha=0.7) +
geom_histogram(data=cpu4, aes(y=..density..), fill="blue", alpha=0.5) +
geom_histogram(data=cpu8, aes(y=..density..), fill="green", alpha=0.5) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_freqpoly(data=cpu2, aes(y=..density..), color="red", fill="red", alpha=0.7) +
geom_histogram(data=cpu4, aes(y=..density..), color="blue", fill="blue", alpha=0.5) +
geom_histogram(data=cpu8, aes(y=..density..), color="green", fill="green", alpha=0.5) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score)) +
geom_freqpoly(data=cpu2, aes(y=..density..), color="red", fill="red", alpha=0.7) +
geom_freqpoly(data=cpu4, aes(y=..density..), color="blue", fill="blue", alpha=0.5) +
geom_freqpoly(data=cpu8, aes(y=..density..), color="green", fill="green", alpha=0.5) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(score, fill=as.factor(cpu))) +
geom_histogram(position="identity", alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(value, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(x=cpu, y=value, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(value, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, color=as.factor(cpu))) +
geom_histogram(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
means = c()
sds = c()
for (i in instance_types) {
print(i)
print(paste("Mean:", mean(logs[logs$instance==i,]$score)))
means <- c(means, mean(logs[logs$instance==i,]$score))
print(paste("SD:", sd(logs[logs$instance==i,]$score)))
sds <- c(sds, sd(logs[logs$instance==i,]$score))
}
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_boxplot() + facet_Grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_boxplot() + facet_grid(rows=vars(provider), cols=vars(type))
?geom_bosplot
?geom_boxplot
ggplot(logs, aes(score, cpu)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type))
google_logs = logs[logs$provider == "google"]
aws_logs = logs[logs$provider == "aws"]
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot(data=google_logs) +
facet_grid(cols=vars(type))
ggplot(google_logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(cols=vars(type))
google_logs
google_logs = logs[logs$provider == "google",]
aws_logs = logs[logs$provider == "aws",]
logs$provider
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
ggplot(google_logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(aws_logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="freey")
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(logs, aes(group(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(logs, aes(group=cpu, score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), score, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(google_logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(aws_logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(cols=vars(type))
relsds = sds/means
score_means = c()
score_sds = c()
for (i in instance_types) {
print(i)
print(paste("Mean:", mean(logs[logs$instance==i,]$score)))
means <- c(means, mean(logs[logs$instance==i,]$score))
print(paste("SD:", sd(logs[logs$instance==i,]$score)))
sds <- c(sds, sd(logs[logs$instance==i,]$score))
}
score_relsds = sds/means
score_relsds
names(score_relsds) <- instance_types
score_relsds
instance_types
library(ggplot2)
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
## Score
score_means = c()
score_sds = c()
score_relsds = c()
for (i in instance_types) {
print(i)
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
}
names(score_means) <- instance_types
names(score_sds) <- instance_types
names(score_relsds) <- instance_types
ggplot(logs, aes(as.factor(cpu), score, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(google_logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(aws_logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
### Score/price
value_means = c()
value_sds = c()
value_relsds = c()
for (i in instance_types) {
print(i)
v_mean <- mean(logs[logs$instance==i,]$value)
v_sd <- sd(logs[logs$instance==i,]$value)
print(paste("Mean:", v_mean))
value_means <- c(value_means, v_mean)
print(paste("SD:", v_sd))
value_sds <- c(value_sds, v_sd)
value_relsds <- c(value_relsds, v_sd/v_mean)
}
names(value_means) <- instance_types
names(value_sds) <- instance_types
names(value_relsds) <- instance_types
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(google_logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(aws_logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(logs, aes(value, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(value, color=as.factor(cpu))) +
geom_histogram(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(x=cpu, y=value, shape=provider, color=type)) + geom_point(size=3)
score_relsds
value_relsds
min(value_means)
value_mean[value_means==min(value_means)]
value_means[value_means==min(value_means)]
value_means[value_means==max(value_means)]
