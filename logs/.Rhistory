for (i in instance_types) {
print(i)
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqplot(logs[logs$instance==i,]$score)
qqplot(logs[logs$instance==i,]$value)
shapiro.test(logs[logs$instance==i,]$score)
shapiro.test(logs[logs$instance==i,]$value)
}
for (i in instance_types) {
print(i)
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqplot(logs[logs$instance==i,]$score)
qqplot(logs[logs$instance==i,]$value)
shapiro.test(logs[logs$instance==i,]$score)
shapiro.test(logs[logs$instance==i,]$value)
}
for (i in instance_types) {
print(i)
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score)
qqnorm(logs[logs$instance==i,]$value)
shapiro.test(logs[logs$instance==i,]$score)
shapiro.test(logs[logs$instance==i,]$value)
}
shapiro.test(logs[logs$instance==i,]$score)
for (i in instance_types) {
print(i)
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
ns <- c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
ns
library(ggplot2)
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
ns <- c()
## Score
score_means = c()
score_sds = c()
score_relsds = c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
ns
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
ns <- c()
## Score
score_means = c()
score_sds = c()
score_relsds = c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
ns <- c()
## Score
score_means = c()
score_sds = c()
score_relsds = c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
library(ggplot2)
logs <- read.csv("vbench_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
ns <- c()
aws_logs = logs[logs$provider == "['aws']",]
## Score
score_means = c()
score_sds = c()
score_relsds = c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
}
ggplot(logs, aes(score)) +
geom_histogram() +
facet_wrap(~instance)
library(ggplot2)
ggplot(logs, aes(score)) +
geom_histogram() +
facet_wrap(~instance)
names(score_means) <- instance_types
names(score_sds) <- instance_types
names(score_relsds) <- instance_types
ggplot(logs, aes(score)) +
geom_freqpoly() +
facet_wrap(~instance)
ggplot(logs, aes(as.factor(cpu), score, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(x=cpu, y=score, shape=provider, color=type)) + geom_point(size=3)
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(google_logs, aes(as.factor(cpu), value)) +
geom_boxplot() +
facet_grid(cols=vars(type))
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("Score/Price") +
labs(title="Objective function result (vbench score / price per hour) for different cloud configurations") +
facet_grid(cols=vars(type), scales="free_y")
levels(logs$provider)
levels(logs$provider) <- c("Amazon EC2", "Google Compute Engine")
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("Score/Price") +
labs(title="Objective function result (vbench score / price per hour) for different cloud configurations") +
facet_grid(cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), score, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("vBench Score") +
labs(title="vbench scores for different cloud configurations") +
facet_grid(cols=vars(type))
ggplot(logs, aes(value, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
ggplot(logs, aes(score, color=as.factor(cpu))) +
geom_freqpoly(aes(y=..density..), alpha=0.7) +
facet_grid(rows=vars(provider), cols=vars(type))
logs <- read.csv("curltest_results")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
logs <- read.csv("curltest_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
levels(logs$provider) <- c("Amazon EC2", "Google Compute Engine")
ns <- c()
## Score
score_means = c()
score_sds = c()
score_relsds = c()
### Score/price
value_means = c()
value_sds = c()
value_relsds = c()
logs <- read.csv("curltest_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
levels(logs$provider)
levels(logs$provider) <- c("Amazon EC2", "Google Compute Engine")
ns <- c()
## Score
score_means = c()
score_sds = c()
score_relsds = c()
### Score/price
value_means = c()
value_sds = c()
value_relsds = c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
v_mean <- mean(logs[logs$instance==i,]$value)
v_sd <- sd(logs[logs$instance==i,]$value)
print(paste("Mean:", v_mean))
value_means <- c(value_means, v_mean)
print(paste("SD:", v_sd))
value_sds <- c(value_sds, v_sd)
value_relsds <- c(value_relsds, v_sd/v_mean)
}
names(score_means) <- instance_types
names(score_sds) <- instance_types
names(score_relsds) <- instance_types
names(value_means) <- instance_types
names(value_sds) <- instance_types
names(value_relsds) <- instance_types
ggplot(logs, aes(score)) +
geom_histogram() +
facet_wrap(~instance)
ggplot(logs, aes(as.factor(cpu), score, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("vBench Score") +
labs(title="vbench scores for different cloud configurations") +
facet_grid(cols=vars(type))
ggplot(logs, aes(as.factor(cpu), score)) +
geom_boxplot() +
facet_grid(rows=vars(provider), cols=vars(type), scales="free_y")
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("Score/Price") +
labs(title="Objective function result (vbench score / price per hour) for different cloud configurations") +
facet_grid(cols=vars(type), scales="free_y")
logs <- read.csv("cloudsuite_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
levels(logs$provider) <- c("Amazon EC2", "Google Compute Engine")
logs <- read.csv("cloudsuite_results.csv")
logs$instance <- as.factor(logs$instance)
instance_types <- levels(logs$instance)
remove_square_brackets <- function(string, edge_length=1) {
return(substr(string, 1+edge_length, nchar(string)-(edge_length)))
}
logs$cpu <- vapply(as.character(logs$cpu), function(x) return(strtoi(remove_square_brackets(x))), c(1))
google_logs = logs[logs$provider == "['google']",]
aws_logs = logs[logs$provider == "['aws']",]
levels(logs$provider)
levels(logs$provider) <- c("Amazon EC2", "Google Compute Engine")
ns <- c()
## Score
score_means = c()
score_sds = c()
score_relsds = c()
### Score/price
value_means = c()
value_sds = c()
value_relsds = c()
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
v_mean <- mean(logs[logs$instance==i,]$value)
v_sd <- sd(logs[logs$instance==i,]$value)
print(paste("Mean:", v_mean))
value_means <- c(value_means, v_mean)
print(paste("SD:", v_sd))
value_sds <- c(value_sds, v_sd)
value_relsds <- c(value_relsds, v_sd/v_mean)
}
head(logs)
logs$score <- logs$throughput
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
print(shapiro.test(logs[logs$instance==i,]$score))
v_mean <- mean(logs[logs$instance==i,]$value)
v_sd <- sd(logs[logs$instance==i,]$value)
print(paste("Mean:", v_mean))
value_means <- c(value_means, v_mean)
print(paste("SD:", v_sd))
value_sds <- c(value_sds, v_sd)
value_relsds <- c(value_relsds, v_sd/v_mean)
}
for (i in instance_types) {
print(i)
ns <- c(ns, nrow(logs[logs$instance==i,]))
s_mean <- mean(logs[logs$instance==i,]$score)
s_sd <- sd(logs[logs$instance==i,]$score)
print(paste("Mean:", s_mean))
score_means <- c(score_means, s_mean)
print(paste("SD:", s_sd))
print(paste("n:", nrow(logs[logs$instance==i,])))
score_sds <- c(score_sds, s_sd)
score_relsds <- c(score_relsds, s_sd/s_mean)
qqnorm(logs[logs$instance==i,]$score, main=i)
# print(shapiro.test(logs[logs$instance==i,]$score))
v_mean <- mean(logs[logs$instance==i,]$value)
v_sd <- sd(logs[logs$instance==i,]$value)
print(paste("Mean:", v_mean))
value_means <- c(value_means, v_mean)
print(paste("SD:", v_sd))
value_sds <- c(value_sds, v_sd)
value_relsds <- c(value_relsds, v_sd/v_mean)
}
names(score_means) <- instance_types
names(score_sds) <- instance_types
names(score_relsds) <- instance_types
names(value_means) <- instance_types
names(value_sds) <- instance_types
names(value_relsds) <- instance_types
ggplot(logs, aes(score)) +
geom_histogram() +
facet_wrap(~instance)
ggplot(logs, aes(as.factor(cpu), score, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("vBench Score") +
labs(title="vbench scores for different cloud configurations") +
facet_grid(cols=vars(type))
ggplot(logs, aes(as.factor(cpu), value, color=provider)) +
geom_boxplot() +
xlab("vCPU #") + ylab("Score/Price") +
labs(title="Objective function result (vbench score / price per hour) for different cloud configurations") +
facet_grid(cols=vars(type), scales="free_y")
exps <- read_csv("exp_results.csv")
exps <- read.csv("exp_results.csv")
exps <- read.csv("exps_results.csv")
head(exps)
vbench <- exps[exps$Deployer=="vbench",]
vbench
curl_test <- exps[exps$Deployer=="ping_testserver",]
curl_test
head(vbench)
plot(vbench$Concurrent_Jobs~vbench$Best_Result)
exps <- read.csv("exps_results.csv")
vbench <- exps[exps$Deployer=="vbench",]
curl_test <- exps[exps$Deployer=="ping_testserver",]
head(vbench)
plot(vbench$Best_Result~vbench$Best_instance)
plot(vbench$Concurrent_Jobs~vbench$Best_instance)
plot(vbench$Best_instance~vbench$Concurrent_Jobs)
vbench$single_job <- exps$Concurrent_Jobs == 1
vbench$Concurrent_Jobs == 1
vbench$Concurrent_Jobs
nrow(vbench)
test <- vbench$Concurrent_Jobs == 1
n(test)
length(test)
test
vbench$single_concurrent <- test
library(ggplot2)
ggplot(vbench, aes(Best_Instance)) +
geom_bar()
ggplot(vbench, aes(Best_instance)) +
geom_bar()
ggplot(vbench, aes(Best_instance)) +
geom_bar() +
facet_grid(rows=vars(single_job),
cols=vars(multiple_providers))
ggplot(vbench, aes(Best_instance)) +
geom_bar() +
facet_grid(rows=vars(single_concurrent),
cols=vars(multiple_providers))
ggplot(vbench, aes(Best_instance)) +
geom_bar() +
facet_grid(rows=vars(single_concurrent),
cols=vars(Multiple_Providers))
View(vbench)
